// Code generated by "stringer -type=Type,Warning -output=string.go"; DO NOT EDIT.

package quota

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[User-0]
	_ = x[Group-1]
	_ = x[Project-2]
}

const _Type_name = "UserGroupProject"

var _Type_index = [...]uint8{0, 4, 9, 16}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[None-0]
	_ = x[InodeHard-1]
	_ = x[InodeSoftLong-2]
	_ = x[InodeSoft-3]
	_ = x[BlockHard-4]
	_ = x[BlockSoftLong-5]
	_ = x[BlockSoft-6]
	_ = x[InodeHardBelow-7]
	_ = x[InodeSoftBelow-8]
	_ = x[BlockHardBelow-9]
	_ = x[BlockSoftBelow-10]
}

const _Warning_name = "NoneInodeHardInodeSoftLongInodeSoftBlockHardBlockSoftLongBlockSoftInodeHardBelowInodeSoftBelowBlockHardBelowBlockSoftBelow"

var _Warning_index = [...]uint8{0, 4, 13, 26, 35, 44, 57, 66, 80, 94, 108, 122}

func (i Warning) String() string {
	if i < 0 || i >= Warning(len(_Warning_index)-1) {
		return "Warning(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Warning_name[_Warning_index[i]:_Warning_index[i+1]]
}
